name: Deploy to Aztec Testnet

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even if contracts exist'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '18'
  AZTEC_VERSION: '1.0.0'

jobs:
  deploy:
    name: Deploy Contracts to Aztec Testnet
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    permissions:
      contents: write
      pull-requests: write
      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install Dependencies
        run: |
          yarn install --frozen-lockfile
          
      - name: Setup Aztec CLI
        run: |
          # Install Aztec CLI tools
          bash -i <(curl -s https://install.aztec.network)
          echo "$HOME/.aztec/bin" >> $GITHUB_PATH
          
      - name: Verify Aztec Installation
        run: |
          which aztec || echo "Aztec not found in PATH"
          which aztec-wallet || echo "Aztec-wallet not found in PATH"
          export PATH="$HOME/.aztec/bin:$PATH"
          aztec --version || echo "Failed to get Aztec version"
          aztec-wallet --help || echo "Failed to get Aztec-wallet help"

      - name: Start Aztec Testnet Connection
        run: |
          export PATH="$HOME/.aztec/bin:$PATH"
          # Test connection to testnet
          timeout 30 aztec-wallet get-node-info || echo "Could not connect to testnet"

      - name: Import Test Accounts
        run: |
          export PATH="$HOME/.aztec/bin:$PATH"
          # Import testnet accounts for fee payment
          aztec-wallet import-test-accounts || echo "Failed to import test accounts"

      - name: Compile Contracts
        run: |
          yarn clean
          yarn compile
          yarn codegen

      - name: Deploy Contracts
        id: deploy
        run: |
          export PATH="$HOME/.aztec/bin:$PATH"
          
          # Set deployment parameters
          export AZTEC_RPC_URL="https://aztec-testnet.aztec.network:8080"
          export AZTEC_ACCOUNT_ALIAS="deployer_$(date +%s)"
          
          # Run deployment with retry mechanism
          yarn deploy
          
          # Check if deployments.json was updated
          if git diff --quiet src/deployments.json; then
            echo "No changes to deployments.json"
            echo "deployment_changed=false" >> $GITHUB_OUTPUT
          else
            echo "Deployments updated"
            echo "deployment_changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Validate Deployment
        if: steps.deploy.outputs.deployment_changed == 'true'
        run: |
          export PATH="$HOME/.aztec/bin:$PATH"
          
          # Validate the deployed contracts are accessible
          node -e "
            const fs = require('fs');
            const deployments = JSON.parse(fs.readFileSync('src/deployments.json', 'utf8'));
            
            console.log('🔍 Validating deployment addresses...');
            console.log('Dripper:', deployments.dripper.address);
            
            deployments.tokens.forEach(token => {
              console.log(\`\${token.name} (\${token.symbol}):\`, token.address);
              
              // Validate address format
              if (!/^0x[a-fA-F0-9]{64}$/.test(token.address)) {
                throw new Error(\`Invalid address format for \${token.name}: \${token.address}\`);
              }
            });
            
            console.log('✅ All addresses validated successfully');
          "

      - name: Create Deployment Summary
        if: steps.deploy.outputs.deployment_changed == 'true'
        id: summary
        run: |
          node -e "
            const fs = require('fs');
            const deployments = JSON.parse(fs.readFileSync('src/deployments.json', 'utf8'));
            
            let summary = '## 🚀 Aztec Testnet Deployment Summary\n\n';
            summary += '### 📅 Deployment Information\n';
            summary += \`- **Date**: \$(new Date().toISOString())\n\`;
            summary += \`- **Commit**: \${{ github.sha }}\n\`;
            summary += \`- **Workflow**: \${{ github.run_id }}\n\n\`;
            
            summary += '### 📋 Deployed Contracts\n\n';
            summary += \`**Dripper Contract**: \`\${deployments.dripper.address}\`\n\n\`;
            
            summary += '**Token Contracts**:\n';
            deployments.tokens.forEach(token => {
              summary += \`- **\${token.name} (\${token.symbol})**: \`\${token.address}\`\n\`;
            });
            
            summary += '\n### 🔗 Links\n';
            summary += \`- [View on GitHub](\${{ github.server_url }}/\${{ github.repository }}/commit/\${{ github.sha }})\n\`;
            summary += '- [Aztec Testnet Explorer](https://aztec-testnet-explorer.aztec.network/)\n';
            
            fs.writeFileSync('deployment_summary.md', summary);
          "
          
          echo 'summary<<EOF' >> $GITHUB_OUTPUT
          cat deployment_summary.md >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: steps.deploy.outputs.deployment_changed == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            feat: update Aztec testnet deployment addresses
            
            - Updated dripper contract address
            - Updated ETH, USDC, and DAI token addresses
            - Deployed via GitHub Actions workflow #${{ github.run_number }}
          title: '🚀 Update Aztec Testnet Deployment Addresses'
          body: |
            ${{ steps.summary.outputs.summary }}
            
            ---
            
            This PR was automatically created by the deployment workflow after successfully deploying contracts to Aztec testnet.
            
            ### ✅ What's Changed
            - Updated `src/deployments.json` with new contract addresses
            - All contracts deployed and verified on Aztec testnet
            
            ### 🔍 Verification Steps
            - [ ] Verify contract addresses are valid
            - [ ] Confirm contracts are accessible on testnet
            - [ ] Review deployment logs in [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            ### 🚀 Deployment Details
            - **Triggered by**: ${{ github.actor }}
            - **Commit**: ${{ github.sha }}
            - **Workflow Run**: ${{ github.run_id }}
          branch: deployment/aztec-testnet-${{ github.run_number }}
          branch-suffix: timestamp
          delete-branch: true
          labels: |
            deployment
            aztec
            automated
          reviewers: ${{ github.actor }}

      - name: Comment on Original PR
        if: steps.deploy.outputs.deployment_changed == 'true' && github.event.pull_request
        uses: actions/github-script@v7
        with:
          script: |
            const deployments = require('./src/deployments.json');
            
            let comment = '🚀 **Aztec Testnet Deployment Completed**\n\n';
            comment += 'The contracts have been successfully deployed to Aztec testnet:\n\n';
            comment += `**Dripper**: \`${deployments.dripper.address}\`\n`;
            
            deployments.tokens.forEach(token => {
              comment += `**${token.name} (${token.symbol})**: \`${token.address}\`\n`;
            });
            
            comment += `\n[View deployment workflow](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
            
            if (context.issue.number) {
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }

      - name: Add Deployment to Job Summary
        if: always()
        run: |
          echo "## 🚀 Aztec Deployment Results" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ steps.deploy.outputs.deployment_changed }}" == "true" ]]; then
            echo "✅ **Status**: Deployment completed successfully" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            cat deployment_summary.md >> $GITHUB_STEP_SUMMARY
          else
            echo "ℹ️ **Status**: No deployment changes detected" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "The contracts are already deployed and up-to-date." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Workflow Information" >> $GITHUB_STEP_SUMMARY
          echo "- **Run ID**: ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Actor**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY